{"version":3,"sources":["background.jpg","GlobalStyle.js","App/styled.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/styled.js","App/Form/index.js","App/Form/useRatesData.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/index.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","background","Wrapper","styled","div","theme","color","white","black","p","brown","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","LabelText","span","Field","input","silver","Button","button","Header","h1","Info","emperor","Loading","Failure","crimson","Form","useState","setResult","ratesData","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","date","useRatesData","setCurrency","amount","setAmount","className","onSubmit","event","preventDefault","rate","calculateResult","value","onChange","target","placeholder","type","required","step","as","Object","keys","map","StyledClock","boulder","formatDate","toLocaleString","weekday","hour","minute","second","day","month","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2648dfbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.ff65d0c4.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from './background.jpg'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n        font-family: 'Montserrat', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        background-image: url(\"${background}\");\r\n        background-size: cover;\r\n        background-position: center;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-basis: 700px;\r\n    margin: 20px;\r\n    padding: 40px;\r\n    background: ${({theme}) => theme.color.white};\r\n    border-radius: 20px;\r\n    box-shadow: 0 0 30px ${({theme}) => theme.color.black};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    color: ${({ theme }) => theme.color.brown};\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <Wrapper>\r\n        {result !== undefined && (\r\n            <>\r\n            {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\r\n\r\n            <strong>\r\n                {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n            </strong>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n)","import styled from \"styled-components\";\r\n\r\nexport const LabelText = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n    border: 1px solid ${({ theme }) => theme.color.silver};\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 350px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.color.brown};\r\n    color: ${({ theme }) => theme.color.white};\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n\r\n    &:hover{\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active{\r\n        filter: brightness(120%);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n    color: ${({ theme }) => theme.color.brown};\r\n    text-align: center;\r\n`;\r\n\r\nexport const Info = styled.p`\r\n    font-size: 14px;\r\n    text-align: center;\r\n    color: ${({ theme }) => theme.color.emperor};\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n    color: ${({ theme }) => theme.color.brown};\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n    color: ${({ theme }) => theme.color.crimson};\r\n`;","import { useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport { LabelText, Field, Button, Header, Info, Loading, Failure } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState();\r\n    const ratesData = useRatesData();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = ratesData.rates[currency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount * rate,\r\n            currency,\r\n        });\r\n    }\r\n\r\n    const [currency, setCurrency] = useState(\"EUR\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <Header>\r\n                Currency converter\r\n            </Header>\r\n            {ratesData.state === \"loading\"\r\n                ? (\r\n                    <Loading>\r\n                        One second... <br /> I load exchange rates from the European Central Bank\r\n                    </Loading>\r\n                )\r\n                : (\r\n                    ratesData.state === \"error\" ? (\r\n                        <Failure>\r\n                            Hmm ... something went wrong\r\n                            Check your Internet connection - if you have one, the problem is on our side. We apologize.\r\n                        </Failure>\r\n                    ) : (\r\n                        <>\r\n                            <p>\r\n                                <label>\r\n                                    <LabelText>\r\n                                        Amount in PLN*:\r\n                                    </LabelText>\r\n                                    <Field\r\n                                        value={amount}\r\n                                        onChange={({ target }) => setAmount(target.value)}\r\n                                        placeholder=\"Enter the amount in PLN\"\r\n                                        type=\"number\"\r\n                                        required\r\n                                        step=\"0.01\"\r\n                                    />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <LabelText>\r\n                                        Currency:\r\n                                    </LabelText>\r\n                                    <Field\r\n                                        as=\"select\"\r\n                                        value={currency}\r\n                                        onChange={({ target }) => setCurrency(target.value)}\r\n                                    >\r\n                                        {Object.keys(ratesData.rates).map(((currency) => (\r\n                                            <option\r\n                                                key={currency}\r\n                                                value={currency}\r\n                                            >\r\n                                                {currency}\r\n                                            </option>\r\n                                        )))}\r\n                                    </Field>\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <Button>Convert!</Button>\r\n                            </p>\r\n\r\n                            <Info>\r\n                                The courses are taken from the European Central Bank. <br /> Valid as of <strong>{ratesData.date}</strong>.\r\n                            </Info>\r\n\r\n                            <Result result={result} />\r\n                        </>\r\n                    )\r\n                )\r\n            }\r\n\r\n        </form>\r\n    );\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchRates = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangerate.host/latest?base=PLN\");\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n\r\n                const { rates, date } = await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            }\r\n        }\r\n\r\n        setTimeout(fetchRates, 1000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: ${({ theme }) => theme.color.boulder};\r\n`;","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { StyledClock } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n   \r\n    return (\r\n        <StyledClock>\r\n            Today is\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </StyledClock>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import { Wrapper } from './styled';\r\nimport { Form } from './Form';\r\nimport { Clock } from './Clock';\r\n\r\nfunction App() {\r\n    return (\r\n        <Wrapper>\r\n            <Clock />\r\n            <Form />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        silver: \"#ccc\",\r\n        emperor:\"#555\",\r\n        boulder:\"#777\",\r\n        white: \"#fff\",\r\n        brown: \"#994500\",\r\n        crimson: \"#db143c\",\r\n    }\r\n}"],"sourceRoot":""}